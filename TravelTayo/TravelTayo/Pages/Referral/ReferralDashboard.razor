@page "/referral/referraldashboard"
@attribute [Authorize]



    <div class="container my-5">
        <!-- Referral Program Introduction -->
        <section class="py-5 bg-light text-center mb-4">
            <h1 class="fw-bold text-primary">Invite Friends & Earn Rewards!</h1>
            <p class="lead">
                Share your unique referral link with friends and earn commision for every confirmed booking.
                It's simple, fun, and rewarding!
            </p>
        </section>            
      
        <!-- Referral Link Section -->
        <div class="card shadow-sm p-4 text-center mb-4">
            <h3 class="mb-3">Your Referral Link</h3>
            <div class="d-flex justify-content-center align-items-center flex-wrap">
                <input class="form-control form-control-lg me-2 text-center"
                       value="@ReferralLink" readonly style="max-width: 500px;" />
                <button class="btn btn-primary mt-2 mt-md-0" @onclick="CopyLink">
                    <i class="bi bi-clipboard me-1"></i> Copy Link
                </button>
            </div>
        </div>


        <div class="row">
            <!-- Left Column: Summary -->
            <div class="col-lg-4 mb-4">
                <div class="card shadow-sm p-4 text-center">
                    <h3>Potential Earnings</h3>
                    <div class="mt-3">
                        <p><strong>Total Referrals:</strong> @TotalReferrals</p>
                        <p><strong>Completed Bookings:</strong> @CompletedBookings</p>
                        <p><strong>Estimated Rewards:</strong> ₱@RewardsEarned</p>
                    </div>
                </div>
            </div>

            <!-- Right Column: Referral List -->
            <div class="col-lg-8 mb-4">
                <div class="card shadow-sm p-4">
                    <h3 class="mb-3">Your Referrals</h3>

                    <!-- Filter Buttons -->
                    <div class="mb-3">
                        <button class="btn btn-outline-primary me-2 @(CurrentFilter == null ? "active" : "")" @onclick="() => SetFilter(null)">All</button>
                        <button class="btn btn-outline-warning me-2 @(CurrentFilter == ReferralStatus.Pending ? "active" : "")" @onclick="() => SetFilter(ReferralStatus.Pending)">Pending</button>
                        <button class="btn btn-outline-success @(CurrentFilter == ReferralStatus.Completed ? "active" : "")" @onclick="() => SetFilter(ReferralStatus.Completed)">Completed</button>
                    </div>

                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Status</th>
                                <th>Booking Date</th>
                                <th>Reward</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var referral in FilteredReferrals)
                            {
                                <tr>
                                    <td>@referral.Name</td>
                                    <td>
                                        @if (referral.Status == ReferralStatus.Pending)
                                        {
                                            <span class="badge bg-warning text-dark">Pending</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success">Completed</span>
                                        }
                                    </td>
                                    <td>@referral.BookingDate.ToShortDateString()</td>
                                    <td>₱@referral.Reward</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

       
    
    </div>


@code {
    private bool isLoading = true;
    private ReferralStatus? CurrentFilter = null;

    private int TotalReferrals => Referrals.Count;
    private int CompletedBookings => Referrals.Count(r => r.Status == ReferralStatus.Completed);
    private int RewardsEarned => Referrals.Where(r => r.Status == ReferralStatus.Completed).Sum(r => r.Reward);

    private string ReferralLink;


    private List<ReferralItem> Referrals = new()
    {
        new ReferralItem { Name = "Juan Dela Cruz", Status = ReferralStatus.Completed, BookingDate = DateTime.Now.AddDays(-10), Reward = 200 },
        new ReferralItem { Name = "Maria Santos", Status = ReferralStatus.Pending, BookingDate = DateTime.Now.AddDays(-2), Reward = 200 },
        new ReferralItem { Name = "Pedro Reyes", Status = ReferralStatus.Completed, BookingDate = DateTime.Now.AddDays(-5), Reward = 200 }
    };

    private IEnumerable<ReferralItem> FilteredReferrals => CurrentFilter == null ? Referrals : Referrals.Where(r => r.Status == CurrentFilter);

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!(user.Identity?.IsAuthenticated ?? false))
        {
            // Only redirect if account is required
            Navigation.NavigateTo("/authentication/login");
            return;
        }
        else
        {
            var b2cUserId = user.Claims.FirstOrDefault(c => c.Type == "http://schemas.microsoft.com/identity/claims/objectidentifier" ||
             c.Type == "b2cUserID")?.Value;
            var existingAccount = await AccountService.GetByB2CUserIdAsync(b2cUserId);

            if (existingAccount != null)    
            {
                ReferralLink = "https://www.travel-tayo.com/ref?code=" + existingAccount.ReferralCode;
            }

        }
    }

    private void GoToRegistration()
    {
        Navigation.NavigateTo("/referral/referralregistration");
    }

    private void SetFilter(ReferralStatus? status)
    {
        CurrentFilter = status;
    }

    public class ReferralItem
    {
        public string Name { get; set; } = "";
        public ReferralStatus Status { get; set; }
        public DateTime BookingDate { get; set; }
        public int Reward { get; set; }
    }

    public enum ReferralStatus
    {
        Pending,
        Completed
    }

    private async Task CopyLink()
    {
        await JS.InvokeVoidAsync("navigator.clipboard.writeText", ReferralLink);
    }
}
